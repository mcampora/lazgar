[{"/Users/mcampora/Documents/Dev/lazgar/src/index.js":"1","/Users/mcampora/Documents/Dev/lazgar/src/reportWebVitals.js":"2","/Users/mcampora/Documents/Dev/lazgar/src/App.js":"3"},{"size":500,"mtime":1611421249138,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1611421249146,"results":"6","hashOfConfig":"5"},{"size":5362,"mtime":1611595991860,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"170urno",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/Users/mcampora/Documents/Dev/lazgar/src/index.js",[],["16","17"],"/Users/mcampora/Documents/Dev/lazgar/src/reportWebVitals.js",[],"/Users/mcampora/Documents/Dev/lazgar/src/App.js",["18","19","20"],"//import logo from './logo.svg';\nimport './App.css';\n\nimport React, { useEffect } from \"react\";\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Container, CssBaseline, Typography } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport EmailIcon from '@material-ui/icons/Email';\nimport IconButton from '@material-ui/core/IconButton';\n\n// - select the right font\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: '100vw',\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    textAlign: 'center',\n  },\n  grid: {\n  },\n  item: {\n    //alignItems: \"center\",\n    padding: '10px',\n  },\n  contact: {\n    textAlign: 'right',\n    paddingBottom: '25px',\n    paddingRight: '10px',\n  },\n  paper: {\n    //padding: theme.spacing(1),\n    //textAlign: 'center',\n  },\n  logo: {\n    maxHeight: '80px',\n    textAlign: 'left',\n  },\n  card: {\n    borderRadius: '0.5rem',\n    boxShadow: 'none',\n    position: 'relative',\n    minWidth: 180,\n    //minHeight: 200,\n    minHeight: 360,\n    //maxWidth: 300,\n    '&:after': {\n      content: '\"\"',\n      display: 'block',\n      position: 'absolute',\n      width: '100%',\n      height: '64%',\n      bottom: 0,\n      zIndex: 1,\n      background: 'linear-gradient(to top, #000, rgba(0,0,0,0))',\n    },\n  },\n  content: {\n    position: 'absolute',\n    zIndex: 2,\n    bottom: 0,\n    width: '100%',\n  },\n  cover: ({ bgColor = 'rgba(0, 0, 0, 0.08)', bgPosition = 'center' }) => ({\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    zIndex: 0,\n    backgroundColor: bgColor,\n    backgroundPosition: bgPosition,\n  }),\n}));\n\nfunction Pillar(props) {\n  const classes = useStyles();\n  return (\n    <Card className={classes.card}>\n      <CardMedia className={classes.cover} image={props.image} />\n      <Box py={3} px={2} className={classes.content}>\n        <Typography variant=\"h5\">{props.title}</Typography>\n        <Typography variant=\"caption\" color=\"textSecondary\">{props.desc}</Typography>\n      </Box>\n    </Card>\n  );\n}\n\nconst Mailto = ({ email, subject = '', body = '', children }) => {\n  let params = subject || body ? '?' : '';\n  if (subject) params += `subject=${encodeURIComponent(subject)}`;\n  if (body) params += `${subject ? '&' : ''}body=${encodeURIComponent(body)}`;\n  return (\n    <Box>\n      <Typography variant=\"body2\">{children}</Typography>\n      <IconButton component=\"span\">\n        <Link href={`mailto:${email}${params}`} color=\"inherit\">\n          <EmailIcon/>\n        </Link>\n      </IconButton>\n    </Box>\n  );\n};\n\nfunction App() {\n  const classes = useStyles();\n\n  const prefersDarkMode = true; //useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const [darkMode, setDarkMode] = React.useState(prefersDarkMode);\n  console.log(darkMode);\n  useEffect(() => {\n    setDarkMode(prefersDarkMode);\n  }, [prefersDarkMode]);\n  const handleDarkModeToggle = () => {\n    setDarkMode(!darkMode);\n  };\n\n  const theme = React.useMemo(() =>\n    createMuiTheme({\n      palette: {\n        type: darkMode ? \"dark\" : \"light\",\n        background: {\n          default: 'rgba(79,116,153)',\n          paper: 'rgba(79,116,153)',\n        },\n        typography: {\n          \"fontFamily\": \"'Montserrat', sans-serif\",\n          \"fontSize\": 14,\n          \"fontWeightLight\": 300,\n          \"fontWeightRegular\": 400,\n          \"fontWeightMedium\": 500\n        },\n      }\n    })\n  );\n  \n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline/>\n      {/*<button onClick={handleDarkModeToggle}>Toggle Dark Mode</button>*/}\n      <Container className={classes.root}>\n        <Grid className={classes.grid} container alignItems=\"flex-start\" justify=\"center\" spacing={0}>\n          <Grid className={classes.logo} item xs={12}>\n            <img className={classes.logo} src=\"logo-title.png\" alt=\"logo\" />\n          </Grid>\n          <Grid className={classes.item} item xs={12} sm={4}>\n            <Pillar \n              image='city1.png'\n              title='Understand'\n              desc='Where you are starting from, the need for modernisation...'\n            />\n          </Grid>\n          <Grid className={classes.item} item xs={12} sm={4}>\n            <Pillar \n              image='city2.png'\n              title='Define'\n              desc='Where you want to be, identity the solutions and trajectories...'\n            />\n          </Grid>\n          <Grid className={classes.item} item xs={12} sm={4}>\n            <Pillar \n              image='city3.png'\n              title='Transform'\n              desc='Find or develop the right skills, help with the transformation, \n                ...'\n            />\n          </Grid>\n          <Grid className={classes.contact} item xs={12}>\n            <Mailto email=\"marc.campora@lazgar.net\" subject=\"Hello & please tell me more\" body=\"...\">\n              Mail me to know more\n            </Mailto>\n          </Grid>\n        </Grid>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n",{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","severity":1,"message":"26","line":13,"column":8,"nodeType":"27","messageId":"28","endLine":13,"endColumn":13},{"ruleId":"25","severity":1,"message":"29","line":124,"column":9,"nodeType":"27","messageId":"28","endLine":124,"endColumn":29},{"ruleId":"30","severity":1,"message":"31","line":128,"column":17,"nodeType":"32","endLine":128,"endColumn":30},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'handleDarkModeToggle' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","no-global-assign","no-unsafe-negation"]